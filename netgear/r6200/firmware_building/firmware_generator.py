#!/usr/bin/env python

from bowcaster.common.support import LittleEndian
from bowcaster.common.support import Logging
from trx import TrxHeader
from ambit_header import AmbitHeader
import sys

class NetgearFirmware(object):
    
    def __init__(self,kernel,filesystem,endianness,logger=None,version_string=None):
        firmware_bytes=""
        input_files=[kernel,filesystem]
        self.trx_header=TrxHeader(input_files,endianness,logger=logger)
        firmware_bytes+=str(self.trx_header)
        firmware_bytes+=open(kernel,"rb").read()
        firmware_bytes+=open(filesystem,"rb").read()
        self.ambit_header=AmbitHeader(firmware_bytes,version_string=version_string,logger=logger)
        self.firmware_bytes=str(self.ambit_header)+firmware_bytes

if __name__=="__main__":
    logger=Logging()
    version_string="V1.2.3.4_5.6.7"
    logger.LOG_DEBUG("Using version string: %s" % version_string)
    kernel_file=sys.argv[1]
    squashfs_file=sys.argv[2]
    firmware_output_file=sys.argv[3]
    fw=NetgearFirmware(kernel_file,squashfs_file,LittleEndian,version_string=version_string,logger=logger)
    find=""
    """    if sys.argv[3].startswith("find="):
        logger.LOG_DEBUG("%s" % sys.argv[2])
        find_str=sys.argv[2].split("find=")[1]
        logger.LOG_DEBUG("%s" % find_str)
        if find_str.startswith("0x"):
            find=int(find_str,0)
        else:
            find=find_str
        
        found=fw.ambit_header.buf.find_offset(find)
        logger.LOG_INFO("Found %s at offset: %d" % (find_str,found))
        sys.exit(0)"""
    open(firmware_output_file,"wb").write(fw.firmware_bytes)
